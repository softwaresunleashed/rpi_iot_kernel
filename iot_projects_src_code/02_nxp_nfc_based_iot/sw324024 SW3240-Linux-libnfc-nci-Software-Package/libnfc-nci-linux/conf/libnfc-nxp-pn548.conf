########################### PN548 libnfc-nxp.conf ############################
## 
## This file is used by NFC NXP NCI HAL(libnfc-nci-linux/src/halimpl/pn54x)
## and NFC Service Interface Extensions (libnfc-nci-linux/src/service/extns/src)
## 

###############################################################################
# File Name and location for Firmware
NXP_NFC_FW_PATH="/usr/local/lib"
NXP_NFC_FW_NAME="libpn7150_fw.so"

###############################################################################
# Extension for MIFARE reader enable
# Setting this parameter to 1 will enable the support of MIFARE Classic Reader.
MIFARE_READER_ENABLE=0x01

###############################################################################
# System clock source selection configuration
#define CLK_SRC_XTAL       0x01
#define CLK_SRC_PLL        0x02
NXP_SYS_CLK_SRC_SEL=0x01

###############################################################################
# System clock frequency selection configuration.
# Only valid in case of PLL clock source.
#define CLK_FREQ_13MHZ         1
#define CLK_FREQ_19_2MHZ       2
#define CLK_FREQ_24MHZ         3
#define CLK_FREQ_26MHZ         4
#define CLK_FREQ_38_4MHZ       5
#define CLK_FREQ_52MHZ         6
NXP_SYS_CLK_FREQ_SEL=0x00 

############################################################################### 
# The timeout value to be used for clock request acknowledgment 
# min value = 0x01 to max = 0x1A
# Only valid in case of PLL clock source.
NXP_SYS_CLOCK_TO_CFG=0x01

###############################################################################
# Core configuration settings
NXP_CORE_CONF={ 20, 02, 2B, 0D,
    28, 01, 00,
    21, 01, 00,
    30, 01, 08,
    31, 01, 03,
    33, 04, 04, 03, 02, 01,
    54, 01, 06,
    50, 01, 02,
    5B, 01, 00,
    60, 01, 0E,
    80, 01, 01,
    81, 01, 01,
    82, 01, 0E,
    18, 01, 01
}

###############################################################################
# NXP Proprietary core configuration extensions
# For more details refer to the NFC Controller User Manual
NXP_CORE_CONF_EXTN={20, 02, 09, 02,
    A0, 5E, 01, 01,
    A0, 40, 01, 00
}

###############################################################################
# Vendor Specific Proprietary Protocol & Discovery Configuration
# Set to 0xFF if unsupported
#  byte[0] NCI_PROTOCOL_18092_ACTIVE
#  byte[1] NCI_PROTOCOL_B_PRIME
#  byte[2] NCI_PROTOCOL_DUAL
#  byte[3] NCI_PROTOCOL_15693
#  byte[4] NCI_PROTOCOL_KOVIO
#  byte[5] NCI_PROTOCOL_MIFARE
#  byte[6] NCI_DISCOVERY_TYPE_POLL_KOVIO
#  byte[7] NCI_DISCOVERY_TYPE_POLL_B_PRIME
#  byte[8] NCI_DISCOVERY_TYPE_LISTEN_B_PRIME
NXP_NFC_PROPRIETARY_CFG={05:FF:FF:06:81:80:70:FF:FF}

###############################################################################
# TVDD configurations settings
# Allow NFCC to configure External TVDD
# There are two possible configurations (0x01 or 0x02):
#    CFG1: Vbat is used to generate the VDD(TX) through TXLDO
#    CFG2: external 5V is used to generate the VDD(TX) through TXLDO
NXP_EXT_TVDD_CFG=0x02

# CFG1: 3.3V for both Reader and Card modes
NXP_EXT_TVDD_CFG_1={20, 02, 07, 01, A0, 0E, 03, 02, 09, 00}

# CFG2: VBAT2 to 5V and 4.7V for both Reader and Card modes
NXP_EXT_TVDD_CFG_2={20, 02, 07, 01, A0, 0E, 03, 06, 64, 00}

###############################################################################
# RF configuration settings
# Below settings relates to OM5578 demo kit RF performance optimization
NXP_RF_CONF_BLK_1={20, 02, A3, 13,
    A0, 0D, 06, 04, 35, 90, 01, F4, 01,
    A0, 0D, 06, 06, 44, 01, 90, 03, 00,
    A0, 0D, 06, 06, 30, B0, 01, 10, 00,
    A0, 0D, 06, 06, 42, 02, 00, FF, FF,
    A0, 0D, 03, 06, 3F, 04,
    A0, 0D, 06, 20, 42, 88, 00, FF, FF,
    A0, 0D, 04, 22, 44, 23, 00,
    A0, 0D, 06, 22, 2D, 50, 34, 0C, 00,
    A0, 0D, 06, 32, 42, F8, 00, FF, FF,
    A0, 0D, 06, 34, 2D, 24, 37, 0C, 00,
    A0, 0D, 06, 34, 33, 86, 80, 00, 70,
    A0, 0D, 04, 34, 44, 22, 00,
    A0, 0D, 06, 42, 2D, 15, 45, 0D, 00,
    A0, 0D, 04, 46, 44, 22, 00,
    A0, 0D, 06, 46, 2D, 05, 59, 0E, 00,
    A0, 0D, 06, 44, 42, 88, 00, FF, FF,
    A0, 0D, 06, 56, 2D, 05, 9F, 0C, 00,
    A0, 0D, 06, 54, 42, 88, 00, FF, FF,
    A0, 0D, 06, 0A, 33, 80, 86, 00, 70
};

NXP_RF_CONF_BLK_2={ 20, 02, 15, 01,
    A0, 1D, 11, 57, 33, 14, 17, 00, AA, 85, 00, 80, 55, 2A, 04, 00, 63, 00, 00, 00
}

###############################################################################
# Override the stack default for NFA_EE_MAX_EE_SUPPORTED set in nfc_target.h.
# The value is set to 3 by default as it assumes we will discover 0xF2,
# 0xF3, and 0xF4. If a platform will exclude and SE, this value can be reduced
# so that the stack will not wait any longer than necessary.
NXP_NFC_MAX_EE_SUPPORTED=0x00
